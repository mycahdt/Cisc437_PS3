CREATE OR REPLACE TRIGGER TRG02_COURSE 
    BEFORE INSERT OR UPDATE ON COURSE 
    FOR EACH ROW
BEGIN
    IF inserting THEN
        :new.CREATED_BY := user;
        :new.CREATED_DATE := SYSDATE;
        :new.MODIFIED_BY := user;
        :new.MODIFIED_DATE := SYSDATE;
    END IF;
    IF updating THEN
        :new.MODIFIED_BY := user;
        :new.MODIFIED_DATE := SYSDATE;
    END IF;
END;

CREATE OR REPLACE TRIGGER TRG02_SECTION
    BEFORE INSERT OR UPDATE ON SECTION 
    FOR EACH ROW
BEGIN
    IF inserting THEN
        :new.CREATED_BY := user;
        :new.CREATED_DATE := SYSDATE;
        :new.MODIFIED_BY := user;
        :new.MODIFIED_DATE := SYSDATE;
    END IF;
    IF updating THEN
        :new.MODIFIED_BY := user;
        :new.MODIFIED_DATE := SYSDATE;
    END IF;
END;

CREATE OR REPLACE TRIGGER TRG02_STUDENT
    BEFORE INSERT OR UPDATE ON STUDENT 
    FOR EACH ROW
BEGIN
    IF inserting THEN
        :new.CREATED_BY := user;
        :new.CREATED_DATE := SYSDATE;
        :new.MODIFIED_BY := user;
        :new.MODIFIED_DATE := SYSDATE;
    END IF;
    IF updating THEN
        :new.MODIFIED_BY := user;
        :new.MODIFIED_DATE := SYSDATE;
    END IF;
END;

CREATE OR REPLACE TRIGGER TRG02_ENROLLMENT 
    BEFORE INSERT OR UPDATE ON ENROLLMENT 
    FOR EACH ROW
BEGIN
    IF inserting THEN
        :new.CREATED_BY := user;
        :new.CREATED_DATE := SYSDATE;
        :new.MODIFIED_BY := user;
        :new.MODIFIED_DATE := SYSDATE;
    END IF;
    IF updating THEN
        :new.MODIFIED_BY := user;
        :new.MODIFIED_DATE := SYSDATE;
    END IF;
END;




CREATE TABLE SCHOOL 
(
  SCHOOL_ID NUMBER NOT NULL 
, SCHOOL_NAME VARCHAR2(30) NOT NULL 
, CREATED_BY VARCHAR2(30) NOT NULL 
, CREATED_DATE DATE NOT NULL 
, MODIFIED_BY VARCHAR2(30) NOT NULL 
, MODIFIED_DATE DATE NOT NULL 
, CONSTRAINT SCHOOL_PK PRIMARY KEY 
  (
    SCHOOL_ID 
  )
  ENABLE 
);

INSERT INTO SCHOOL (SCHOOL_ID, SCHOOL_NAME, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE)
VALUES (1, 'University of Delaware', user, SYSDATE, user, SYSDATE);




ALTER TABLE COURSE
ADD SCHOOL_ID NUMBER;

ALTER TABLE COURSE
ADD PREREQUISITE_SCHOOL_ID NUMBER;

UPDATE COURSE SET SCHOOL_ID = 1;
UPDATE COURSE SET PREREQUISITE_SCHOOL_ID = 1 WHERE PREREQUISITE IS NOT NULL;

ALTER TABLE COURSE
MODIFY (SCHOOL_ID NOT NULL);
------------------------------------------------


ALTER TABLE SECTION
ADD SCHOOL_ID NUMBER;

UPDATE SECTION SET SCHOOL_ID = 1;

ALTER TABLE SECTION
MODIFY (SCHOOL_ID NOT NULL);
------------------------------------------------


ALTER TABLE STUDENT
ADD SCHOOL_ID NUMBER;

UPDATE STUDENT SET SCHOOL_ID = 1;

ALTER TABLE STUDENT
MODIFY (SCHOOL_ID NOT NULL);
------------------------------------------------


ALTER TABLE ENROLLMENT
ADD SCHOOL_ID NUMBER;

UPDATE ENROLLMENT SET SCHOOL_ID = 1;

ALTER TABLE ENROLLMENT
MODIFY (SCHOOL_ID NOT NULL);
------------------------------------------------


DECLARE

V_SQL VARCHAR2(1000);
CURSOR C_CONS IS
SELECT TABLE_NAME, CONSTRAINT_NAME
FROM USER_CONSTRAINTS
WHERE CONSTRAINT_TYPE IN ('R', 'P')
ORDER BY CONSTRAINT_TYPE DESC;

BEGIN
    FOR R_CONS IN C_CONS
    LOOP
        V_SQL := 'ALTER TABLE ' || R_CONS.TABLE_NAME || ' DROP CONSTRAINT ' || R_CONS.CONSTRAINT_NAME;
        DBMS_OUTPUT.PUT_LINE(V_SQL);
        EXECUTE IMMEDIATE V_SQL;
    END LOOP;  
END;
/

ALTER TABLE SCHOOL
ADD CONSTRAINT SCHOOL_PK PRIMARY KEY 
(
  SCHOOL_ID 
)
ENABLE;



ALTER TABLE COURSE
ADD CONSTRAINT COURSE_PK PRIMARY KEY 
(
  COURSE_NO 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE COURSE
ADD CONSTRAINT COURSE_FK1 FOREIGN KEY
(
  SCHOOL_ID 
)
REFERENCES SCHOOL
(
  SCHOOL_ID 
)
ENABLE;


ALTER TABLE COURSE
ADD CONSTRAINT COURSE_FK2 FOREIGN KEY
(
  PREREQUISITE 
, PREREQUISITE_SCHOOL_ID 
)
REFERENCES COURSE
(
  COURSE_NO 
, SCHOOL_ID 
)
DEFERRABLE INITIALLY DEFERRED
ENABLE;

ALTER TABLE SECTION
ADD CONSTRAINT SECTION_PK PRIMARY KEY 
(
  SECTION_ID 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE SECTION
ADD CONSTRAINT SECTION_FK1 FOREIGN KEY
(
  COURSE_NO 
, SCHOOL_ID 
)
REFERENCES COURSE
(
  COURSE_NO 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE SECTION
ADD CONSTRAINT SECTION_FK2 FOREIGN KEY
(
  SCHOOL_ID 
)
REFERENCES SCHOOL
(
  SCHOOL_ID 
)
ENABLE;



ALTER TABLE STUDENT
ADD CONSTRAINT STUDENT_PK PRIMARY KEY 
(
  STUDENT_ID 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE STUDENT
ADD CONSTRAINT STUDENT_FK1 FOREIGN KEY
(
  SCHOOL_ID 
)
REFERENCES SCHOOL
(
  SCHOOL_ID 
)
ENABLE;




ALTER TABLE ENROLLMENT
ADD CONSTRAINT ENROLLMENT_PK PRIMARY KEY 
(
  STUDENT_ID 
, SECTION_ID 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE ENROLLMENT
ADD CONSTRAINT ENROLLMENT_FK1 FOREIGN KEY
(
  SCHOOL_ID 
)
REFERENCES SCHOOL
(
  SCHOOL_ID 
)
ENABLE;

ALTER TABLE ENROLLMENT
ADD CONSTRAINT ENROLLMENT_FK2 FOREIGN KEY
(
  SECTION_ID 
, SCHOOL_ID 
)
REFERENCES SECTION
(
  SECTION_ID 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE ENROLLMENT
ADD CONSTRAINT ENROLLMENT_FK3 FOREIGN KEY
(
  STUDENT_ID 
, SCHOOL_ID 
)
REFERENCES STUDENT
(
  STUDENT_ID 
, SCHOOL_ID 
)
ENABLE;
